opt_out_usage

default_platform(:ios)
# ------
DEVELOPER_APPLE_ID = ENV.fetch('DEVELOPER_APPLE_ID')
DEVELOPER_APP_IDENTIFIER = ENV.fetch('DEVELOPER_APP_IDENTIFIER')
PROVISIONING_PROFILE_SPECIFIER = ENV.fetch('PROVISIONING_PROFILE_SPECIFIER')
# ------
APPLE_ISSUER_ID = ENV.fetch('APPLE_ISSUER_ID')
APPLE_KEY_ID = ENV.fetch('APPLE_KEY_ID')
APPLE_KEY_CONTENT = ENV.fetch('APPLE_KEY_CONTENT')
# ------
MATCH_KEYCHAIN_USER = ENV.fetch('MATCH_KEYCHAIN_USER')
MATCH_PASSWORD = ENV.fetch('MATCH_PASSWORD')
MATCH_GIT_BASIC_AUTHORIZATION = ENV.fetch('MATCH_GIT_BASIC_AUTHORIZATION')
MATCH_CERTS_URL_LUNAR = ENV.fetch('MATCH_CERTS_URL_LUNAR')
# ------
ASC_P8_KEY_ENCODED = ENV.fetch('ASC_P8_KEY_ENCODED')
REPO_GITHUB_TOKEN = ENV.fetch('REPO_GITHUB_TOKEN')
# ------
LOCAL_KEYCHAIN_NAME = 'github_actions_keychain'.freeze
LOCAL_KEYCHAIN_PASS = ENV.fetch('LOCAL_KEYCHAIN_PASS')
# ------
LATEST_GIT_TAG = sh("git describe --abbrev=0 --tags | tr -d '\n'")
# ------
CHANGELOG_LATEST_SECTION = read_changelog(
  section_identifier: '[Unreleased]',
  excluded_markdown_elements: []
)
# ------
APPSTORE_CONNECT_API_KEY = app_store_connect_api_key(
  key_id: APPLE_KEY_ID.to_s,
  issuer_id: APPLE_ISSUER_ID.to_s,
  key_content: ASC_P8_KEY_ENCODED.to_s,
  is_key_content_base64: true,
  duration: 60,
  in_house: false # Is App Store or Enterprise (in house) team?
)

lane :verify_changelog do
  puts CHANGELOG_LATEST_SECTION
end

lane :increment_versions do
  current_testflight_build_number = latest_testflight_build_number(
    app_identifier: DEVELOPER_APP_IDENTIFIER.to_s,
    api_key: @APPSTORE_CONNECT_API_KEY
  )
  increment_build_number(
    build_number: number_of_commits
  )
  increment_version_number_in_xcodeproj(
    scheme: 'Lunar',
    version_number: LATEST_GIT_TAG.to_s
  )
  UI.message "---->Current Build Number: #{current_testflight_build_number}"
  UI.message "-----------> New Build Number: #{number_of_commits}"
end

lane :lunar_sign do
  match(
    type: 'appstore',
    git_url: MATCH_CERTS_URL_LUNAR.to_s,
    app_identifier: [
      'io.github.mani-sh-reddy.Lunar',
      'io.github.mani-sh-reddy.Lunar.Widgets'
    ]
  )
end

lane :ci_lunar_sign do
  match(
    type: 'appstore',
    git_url: MATCH_CERTS_URL_LUNAR.to_s,
    app_identifier: [
      'io.github.mani-sh-reddy.Lunar',
      'io.github.mani-sh-reddy.Lunar.Widgets'
    ],
    git_basic_authorization: @MATCH_GIT_BASIC_AUTHORIZATION,
    keychain_name: LOCAL_KEYCHAIN_NAME.to_s,
    keychain_password: LOCAL_KEYCHAIN_PASS.to_s
  )
end

lane :ci_create_keychain do
  create_keychain(
    name: LOCAL_KEYCHAIN_NAME.to_s,
    password: LOCAL_KEYCHAIN_PASS.to_s,
    default_keychain: true,
    unlock: true,
    timeout: 3600,
    lock_when_sleeps: false
  )
end

lane :lunar_build do
  gym(
    scheme: 'Lunar',
    xcodebuild_formatter: 'xcbeautify',
    xcodebuild_command: 'xcodebuild -allowProvisioningUpdates',
    suppress_xcode_output: false,
    silent: false,
    clean: false,
    build_timing_summary: true,
    analyze_build_time: true
  )
end

lane :lunar_deploy do
  pilot(
    changelog: CHANGELOG_LATEST_SECTION.to_s,
    skip_submission: true,
    api_key: @APPSTORE_CONNECT_API_KEY,
    skip_waiting_for_build_processing: false,
    submit_beta_review: true
  )
end

lane :write_changelog do
  stamp_changelog(
    section_identifier: LATEST_GIT_TAG.to_s,
    should_stamp_date: false
  )
end

lane :write_github_release do
  create_pull_request(
    repo: 'mani-sh-reddy/Lunar',
    api_token: REPO_GITHUB_TOKEN.to_s,
    title: LATEST_GIT_TAG.to_s,
    head: 'dev',
    base: 'release',
    body: CHANGELOG_LATEST_SECTION.to_s
  )

  set_github_release(
    repository_name: 'mani-sh-reddy/Lunar',
    api_token: REPO_GITHUB_TOKEN.to_s,
    name: LATEST_GIT_TAG.to_s,
    tag_name: LATEST_GIT_TAG.to_s,
    description: CHANGELOG_LATEST_SECTION.to_s,
    commitish: 'dev',
    upload_assets: ['Lunar.ipa']
  )
end

lane :ci_generate_github_release do
  set_github_release(
  repository_name: 'mani-sh-reddy/Lunar',
  api_token: REPO_GITHUB_TOKEN.to_s,
  name: LATEST_GIT_TAG.to_s,
  tag_name: LATEST_GIT_TAG.to_s,
  description: CHANGELOG_LATEST_SECTION.to_s,
  commitish: 'dev',
  upload_assets: ['Lunar.ipa']
)
end

lane :local_create_pr_to_release do
create_pull_request(
  repo: 'mani-sh-reddy/Lunar',
  api_token: REPO_GITHUB_TOKEN.to_s,
  title: LATEST_GIT_TAG.to_s,
  head: 'dev',
  base: 'release',
  body: CHANGELOG_LATEST_SECTION.to_s
)
end

lane :CI_TO_TESTFLIGHT_DEPLOY do
  increment_versions
  ci_create_keychain
  ci_lunar_sign
  lunar_build
  lunar_deploy
  write_changelog
  ci_generate_github_release
  # Remaining steps use github actions
end

lane :LOCAL_TO_TESTFLIGHT_DEPLOY do
  increment_versions
  lunar_sign
  lunar_build
  lunar_deploy
  write_changelog
  write_github_release

  # reset_git_repo(
  #   force: true,
  #   files: ['./Lunar.xcodeproj/project.pbxproj']
  # )
end
